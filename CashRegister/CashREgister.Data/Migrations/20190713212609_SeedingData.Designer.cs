// <auto-generated />
using System;
using CashRegister.Data.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CashRegister.Data.Migrations
{
    [DbContext(typeof(CashRegisterContext))]
    [Migration("20190713212609_SeedingData")]
    partial class SeedingData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CashRegister.Data.Entities.Models.Cashier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("Cashiers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(2001, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Ante",
                            LastName = "Antic",
                            Password = "Csiyiid8v6PgQIA6AOm1cO5ZR1nbUI8rVxlWyl4qFNS26XSj"
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(1991, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Ivan",
                            LastName = "Ivanic",
                            Password = "8Ln070G1j0Oq8AQtiXjRI9yu2V04yus2lzrnvhXhMgAPMA+0"
                        });
                });

            modelBuilder.Entity("CashRegister.Data.Entities.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AvailableAmount");

                    b.Property<string>("Barcode");

                    b.Property<string>("Name");

                    b.Property<double>("PriceWithTax");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvailableAmount = 20,
                            Barcode = "12345678",
                            Name = "Sladoled",
                            PriceWithTax = 8.0,
                            Type = 1
                        },
                        new
                        {
                            Id = 2,
                            AvailableAmount = 8,
                            Barcode = "1568916952",
                            Name = "Riba",
                            PriceWithTax = 30.0,
                            Type = 0
                        },
                        new
                        {
                            Id = 3,
                            AvailableAmount = 13,
                            Barcode = "87654321",
                            Name = "Kikiriki",
                            PriceWithTax = 6.0,
                            Type = 1
                        },
                        new
                        {
                            Id = 4,
                            AvailableAmount = 15,
                            Barcode = "1761689234",
                            Name = "Energetsko pice",
                            PriceWithTax = 12.0,
                            Type = 1
                        });
                });

            modelBuilder.Entity("CashRegister.Data.Entities.Models.Receipt", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CashierId");

                    b.Property<DateTime>("DateOfIssue");

                    b.Property<int>("RegisterId");

                    b.HasKey("Id");

                    b.HasIndex("CashierId");

                    b.HasIndex("RegisterId");

                    b.ToTable("Receipts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("16403441-2da3-4030-85c1-a85f65a8d49b"),
                            CashierId = 1,
                            DateOfIssue = new DateTime(2019, 7, 12, 12, 50, 39, 0, DateTimeKind.Unspecified),
                            RegisterId = 1
                        },
                        new
                        {
                            Id = new Guid("b3cf70a8-fe5b-4bd5-b8a0-68102b1d520d"),
                            CashierId = 2,
                            DateOfIssue = new DateTime(2019, 7, 13, 16, 16, 12, 0, DateTimeKind.Unspecified),
                            RegisterId = 2
                        });
                });

            modelBuilder.Entity("CashRegister.Data.Entities.Models.ReceiptProduct", b =>
                {
                    b.Property<Guid>("ReceiptId");

                    b.Property<int>("ProductId");

                    b.Property<double>("Price");

                    b.Property<int>("Quantity");

                    b.Property<int>("TaxType");

                    b.HasKey("ReceiptId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ReceiptProducts");

                    b.HasData(
                        new
                        {
                            ReceiptId = new Guid("16403441-2da3-4030-85c1-a85f65a8d49b"),
                            ProductId = 1,
                            Price = 8.0,
                            Quantity = 2,
                            TaxType = 1
                        },
                        new
                        {
                            ReceiptId = new Guid("16403441-2da3-4030-85c1-a85f65a8d49b"),
                            ProductId = 2,
                            Price = 30.0,
                            Quantity = 1,
                            TaxType = 0
                        },
                        new
                        {
                            ReceiptId = new Guid("b3cf70a8-fe5b-4bd5-b8a0-68102b1d520d"),
                            ProductId = 2,
                            Price = 30.0,
                            Quantity = 3,
                            TaxType = 0
                        },
                        new
                        {
                            ReceiptId = new Guid("b3cf70a8-fe5b-4bd5-b8a0-68102b1d520d"),
                            ProductId = 3,
                            Price = 6.0,
                            Quantity = 8,
                            TaxType = 1
                        },
                        new
                        {
                            ReceiptId = new Guid("b3cf70a8-fe5b-4bd5-b8a0-68102b1d520d"),
                            ProductId = 4,
                            Price = 12.0,
                            Quantity = 1,
                            TaxType = 1
                        });
                });

            modelBuilder.Entity("CashRegister.Data.Entities.Models.Register", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Registers");

                    b.HasData(
                        new
                        {
                            Id = 1
                        },
                        new
                        {
                            Id = 2
                        });
                });

            modelBuilder.Entity("CashRegister.Data.Entities.Models.Receipt", b =>
                {
                    b.HasOne("CashRegister.Data.Entities.Models.Cashier", "Cashier")
                        .WithMany("Receipts")
                        .HasForeignKey("CashierId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CashRegister.Data.Entities.Models.Register", "Register")
                        .WithMany("Receipts")
                        .HasForeignKey("RegisterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CashRegister.Data.Entities.Models.ReceiptProduct", b =>
                {
                    b.HasOne("CashRegister.Data.Entities.Models.Product", "Product")
                        .WithMany("ReceiptProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CashRegister.Data.Entities.Models.Receipt", "Receipt")
                        .WithMany("ReceiptProducts")
                        .HasForeignKey("ReceiptId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
